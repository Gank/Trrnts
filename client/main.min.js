angular.module('trrntsApp', [
  'trrntsApp.controllers',
  'trrntsApp.services',
  'trrntsApp.directives'
])
.config(['$compileProvider', function ($compileProvider) {
  // Angular prefixes magnet URIs with "unsafe:", which makes them unclickable.
  $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|magnet):/);
}]);

angular.module('trrntsApp.controllers', [])

.controller('SubmitMagnetLinkController', function($scope, MagnetLinksFactory) {
  $scope.magnetURI = '';

  $scope.submit = function () {
    // base check: value not null
    if ($scope.magnetURI) {
      MagnetLinksFactory.submit($scope.magnetURI)
      .catch(function (err) {
        console.error(err);
      });
    }
  };
})

.controller('LatestMagnetLinksController', function ($scope, MagnetLinksFactory) {
  $scope.latestMagnets = [];
  MagnetLinksFactory.getLatestMagnets(10).then(function(result){
    $scope.latestMagnets = result.data;
  }).catch(function(){
    $scope.latestMagnets = ['There has been an error houston'];
  });
})

.controller('TopMagnetLinksController', function ($scope) {
  $scope.topMagnets = [];
});

angular.module('trrntsApp.directives', [])

.directive('barChart', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      element = element[0];
      var barWidth = attrs.barWidth || 20;
      var barSpace = attrs.barSpace || 2;
      var chartHeight = element.offsetHeight;

      // Dummy data fallback for now...
      var data = scope.data || [12, 23, 23, 234, 324, 243, 3, 23];

      var y = d3.scale.linear()
                .domain([0, d3.max(data)])
                .range([0, chartHeight]);

      d3.select(element)
        .selectAll('rect')
          .data(data)
        .enter().append('rect')
          .attr('class', 'bar')
          .attr('width', barWidth)
          .attr('x', function (d, i) { return barWidth*i + barSpace*i; })
          .attr('y', chartHeight)
          .attr('height', 0)
          .transition()
          .delay(function (d, i) { return i*100; })
          .attr('y', function (d, i) { return chartHeight-y(d); })
          .attr('height', function (d) { return y(d); });
    }
  };
});

/*! Trrnts 12-07-2014 */
angular.module("trrntsApp",["trrntsApp.controllers","trrntsApp.services","trrntsApp.directives"]).config(["$compileProvider",function($compileProvider){$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|magnet):/)}]),angular.module("trrntsApp.controllers",[]).controller("SubmitMagnetLinkController",function($scope,MagnetLinksFactory){$scope.magnetURI="",$scope.submit=function(){$scope.magnetURI&&MagnetLinksFactory.submit($scope.magnetURI).catch(function(err){console.error(err)})}}).controller("LatestMagnetLinksController",function($scope,MagnetLinksFactory){$scope.latestMagnets=[],MagnetLinksFactory.getLatestMagnets(10).then(function(result){$scope.latestMagnets=result.data}).catch(function(){$scope.latestMagnets=["There has been an error houston"]})}).controller("TopMagnetLinksController",function($scope){$scope.topMagnets=[]}),angular.module("trrntsApp.directives",[]).directive("barChart",function(){return{restrict:"A",link:function(scope,element,attrs){element=element[0];var barWidth=attrs.barWidth||20,barSpace=attrs.barSpace||2,chartHeight=element.offsetHeight,data=scope.data||[12,23,23,234,324,243,3,23],y=d3.scale.linear().domain([0,d3.max(data)]).range([0,chartHeight]);d3.select(element).selectAll("rect").data(data).enter().append("rect").attr("class","bar").attr("width",barWidth).attr("x",function(d,i){return barWidth*i+barSpace*i}).attr("y",chartHeight).attr("height",0).transition().delay(function(d,i){return 100*i}).attr("y",function(d){return chartHeight-y(d)}).attr("height",function(d){return y(d)})}}}),angular.module("trrntsApp.services",[]).factory("MagnetLinksFactory",function($http){var submit=function(magnetURI){return $http({method:"POST",url:"/api/magnets",data:{magnetURI:magnetURI}})},getLatestMagnets=function(amount){return $http({method:"GET",url:"api/magnets/latest/"+amount})};return{submit:submit,getLatestMagnets:getLatestMagnets}});
angular.module('trrntsApp.services', [])

.factory('MagnetLinksFactory', function($http) {
  // Submit Magnet URI
  var submit = function (magnetURI) {
    return $http({
      method: 'POST',
      url: '/api/magnets',
      data: {'magnetURI': magnetURI}
    });
  };

  // Retrieve n number of latest magnets
  var getLatestMagnets = function(amount){
    return $http({
      method: 'GET',
      url:'api/magnets/latest/'+amount
    });
  };

  return {
    'submit': submit,
    'getLatestMagnets': getLatestMagnets
  };
});
